{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"Minutes <p>     Sync worklogs between multiple time trackers, invoicing, and bookkeeping software.      Bug report     \u00b7     Feature request </p> <p> </p> <p></p> <p>Charging by the hour is one of the most common ways to invoice a client. Some companies or clients specify the time tracking tool to use, though it usually won't fit your own workflows. This even gets more complicated and cumbersome, when the invoices should contain the tasks you spent time on.</p> <p>Minutes is a CLI tool, primarily made for entrepreneurs and finance people, to help their daily work by synchronizing worklogs from a <code>source</code> to a <code>target</code> software. The <code>source</code> can be your own time tracking tool you use, let's say Tempo, while the <code>target</code> is a bookkeeping software, like Zoho Books.</p>"},{"location":"#key-features","title":"Key features","text":"<p>Some features may vary depending on the <code>source</code> and <code>target</code>. For more information, please refer to their documentation.</p> <ul> <li>Customize the date time format used for fetching entries</li> <li>Set a specific start and end date to query entries</li> <li>Force every second spent to be billable<sup>1</sup></li> <li>Treat tags attached to an entry as tasks you spent time on<sup>2</sup></li> <li>Round billable and unbillable seconds to the closest minute per entry<sup>3</sup></li> <li>Customizable table output before uploading</li> </ul> <p>For usage examples and configuration options, please check the Getting Started and Configuration documentation.</p>"},{"location":"#supported-platforms","title":"Supported platforms","text":"<p>The following platforms and tools are supported. If you miss your favorite tool, please send a pull request with the implementation, or file a new feature request.</p> Tool Use as source Use as target Clockify yes upon request Everhour upon request upon request FreshBooks upon request planned Harvest yes upon request QuickBooks upon request upon request Tempo yes yes Time Doctor upon request upon request TimeCamp upon request upon request Timewarrior yes upon request Toggl Track yes upon request Zoho Books upon request planned"},{"location":"#versioning","title":"Versioning","text":"<p>Minutes adheres to Semantic Versioning.</p>"},{"location":"#disclaimer","title":"Disclaimer","text":"<p>Warning</p> <p>Minutes comes with absolutely no warranty. When money comes into the picture, everyone should be more careful what they are doing. Before and after synchronizing any logs to the <code>target</code>, make sure the entries displayed on the screen matching the <code>source</code> entries.</p> <ol> <li> <p>It can be useful if the <code>source</code> does not support billable time, while the <code>target</code> does.\u00a0\u21a9</p> </li> <li> <p>When you need to split time across entries or your <code>source</code> tool does not support tasks, it comes handy to tag entries.\u00a0\u21a9</p> </li> <li> <p>Rounding rules are the following: if you spent &gt;=30 seconds on a task, it will be treated as 1 minute, otherwise 0 (zero).\u00a0\u21a9</p> </li> </ol>"},{"location":"CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p>"},{"location":"CHANGELOG/#034-2024-06-14","title":"[0.3.4] - 2024-06-14","text":"<p>Miscellaneous Tasks</p> <ul> <li>Update dependencies (11850d8)</li> <li>Bump dependencies and go version (43e68dc)</li> </ul> <p>Refactor</p> <ul> <li>Adjust goreleaser configuration (86e7efe)</li> <li>Resolve linter errors (c5d8865)</li> </ul> <p>Build</p> <ul> <li>Fix GitHub workflow artifact upload (bf501ec)</li> </ul>"},{"location":"CHANGELOG/#033-2023-02-27","title":"[0.3.3] - 2023-02-27","text":"<p>Miscellaneous Tasks</p> <ul> <li>Update dependencies (34b5704)</li> <li>Update dependencies and go version (f68323c)</li> </ul>"},{"location":"CHANGELOG/#032-2022-11-02","title":"[0.3.2] - 2022-11-02","text":"<p>Ci</p> <ul> <li>Upgrade go executable to fix security issues (45c4466)</li> </ul>"},{"location":"CHANGELOG/#031-2022-09-22","title":"[0.3.1] - 2022-09-22","text":"<p>Refactor</p> <ul> <li>Update dependencies (#45) (1314e95)</li> </ul>"},{"location":"CHANGELOG/#030-2022-03-14","title":"[0.3.0] - 2022-03-14","text":"<p>Bug Fixes</p> <ul> <li>Fill summary if description exists (0d6aebe)</li> </ul> <p>Miscellaneous Tasks</p> <ul> <li>Upgrade dependencies (037ffdd)</li> </ul> <p>Refactor</p> <ul> <li>Rework tag parsing (d1cbe49)</li> <li>Split root command (#37) (b456227)</li> </ul> <p>Styling</p> <ul> <li>Fix formatting for clockify tests (26fa0b1)</li> </ul>"},{"location":"CHANGELOG/#023-2021-11-08","title":"[0.2.3] - 2021-11-08","text":"<p>Build</p> <ul> <li>Add homebrew formula publishing (82d115c)</li> </ul>"},{"location":"CHANGELOG/#022-2021-11-04","title":"[0.2.2] - 2021-11-04","text":"<p>Bug Fixes</p> <ul> <li>Multiple small issues fix (#35) (ebb0730)</li> </ul> <p>Build</p> <ul> <li>Sign build artifacts (d69bde3)</li> </ul>"},{"location":"CHANGELOG/#021-2021-11-04","title":"[0.2.1] - 2021-11-04","text":"<p>Bug Fixes</p> <ul> <li>Use 7 char long commit hash (d137a63)</li> </ul>"},{"location":"CHANGELOG/#020-2021-11-02","title":"[0.2.0] - 2021-11-02","text":"<p>Bug Fixes</p> <ul> <li>Set timeout for tempo uploader (afc16c1)</li> </ul> <p>Documentation</p> <ul> <li>Fix regex value string quotation marks (f2a9051)</li> </ul> <p>Features</p> <ul> <li>Add filtering for projects and clients (#29) (ea5031f)</li> <li>Add token name option for token auth (cff5e53)</li> <li>Add Harvest as source (#33) (c949a0c)</li> </ul> <p>Miscellaneous Tasks</p> <ul> <li>Update changelog target (bce0418)</li> <li>Update dependencies (f1029a7)</li> </ul> <p>Refactor</p> <ul> <li>Rework client composition logic and remove unnecessary Toggl flag (#30) (6658984)</li> </ul>"},{"location":"CHANGELOG/#010-2021-10-20","title":"[0.1.0] - 2021-10-20","text":"<p>Bug Fixes</p> <ul> <li>Solve time parsing issue when start or end date is defined (3d9c7be)</li> <li>Upload related task entries sequentially (#14) (55ffaed)</li> <li>Add missing user filtering for Toggl integration (649f873)</li> </ul> <p>Documentation</p> <ul> <li>Add readme file (6784310)</li> <li>Add code of conduct (6b29c4f)</li> <li>Update go install instructions (a91840f)</li> <li>Add project documentation and changelog generation (c82e766)</li> <li>Fix broken links (9938b0b)</li> <li>Update project home page in help output (114dfdb)</li> <li>Extend release document (d1c24c2)</li> <li>Correct some typos (4c4eea6)</li> <li>Fix configuration option kind (7da72a9)</li> <li>Update bug report and feature request links (fb79d57)</li> <li>Update documentation generation path triggers (cabc5d9)</li> <li>Add migration guides (aaebe2c)</li> <li>Change installation instructions (b7a644f)</li> <li>Add example configuration for all sources (693bf6a)</li> </ul> <p>Features</p> <ul> <li>Initial worklog implementation (b73017b)</li> <li>Add basic client implementation (2501bcc)</li> <li>Add basic tempo client implementation (202ac41)</li> <li>Add basic clockify client implementation (cb04282)</li> <li>Add initial CLI implementation (98a6759)</li> <li>Add initial timewarrior integration (748a304)</li> <li>Add upload status indicator (#10) (d27c124)</li> <li>Add initial Toggl Track integration (#13) (59c2a17)</li> </ul> <p>Miscellaneous Tasks</p> <ul> <li>Add MIT license (3c3b64c)</li> <li>Add initial .gitignore (47e5b92)</li> <li>Add dependencies (1a24535)</li> <li>Add issue templates (99fba16)</li> <li>Add virtualenv to gitignore (466aa6d)</li> <li>Refactor and add badges (72f091f)</li> <li>Add pull request template (21ce60a)</li> <li>Create PR welcome messages (76f99b6)</li> </ul> <p>Refactor</p> <ul> <li>Rename worklog search and create path (b3d1ede)</li> <li>Return a list of entries instead of a pointer to a list of entries (000a6b7)</li> <li>Rename every occurance of item to entry (38f37ab)</li> <li>Update command headline (e1fa381)</li> <li>Replace table printer and refactor utils (67721bf)</li> <li>Rename tasks-as-tags to tags-as-tasks and tasks-as-tags-regex to tags-as-tasks-regex (180126b)</li> <li>Rename ci.yml to build.yml (4165ea4)</li> <li>Rename codeql-analysis.yml to codeql.yml (88edae1)</li> <li>Remove unused <code>verbose</code> flag (28f865d)</li> <li>Do not return pointer slice when splitting (481eb3b)</li> <li>Add entry duration splitting as a method (4fbb077)</li> <li>Use outsourced entry duration splitting (7be81c2)</li> <li>Wrap errors into client.ErrFetchEntries (90f3f2b)</li> <li>Simplify worklog creation (15bdad7)</li> <li>Fix multiple quality issues (#27) (08dff13)</li> <li>Adjust release workflow (6854d9a)</li> </ul> <p>Testing</p> <ul> <li>Add benchmarks for NewWorklog (87f6767)</li> <li>Remove unused mock server opts (9fba963)</li> <li>Use UTC for time zone in tests (145031e)</li> <li>Fix annoying flaky tests (48b57c6)</li> </ul> <p>Build</p> <ul> <li>Add initial Makefile (d25eab8)</li> <li>Add post build hook to call upx (6391c0f)</li> <li>User .Version in snapshot name (d3299d3)</li> <li>Add coverage reporting (5911595)</li> <li>Add several Makefile improvements (291bc75)</li> <li>Remove upx for now (a05c010)</li> <li>Fix build removing test output (d861564)</li> </ul> <p>Ci</p> <ul> <li>Add CodeQL integration (29d4b74)</li> <li>Setup PR builds (210c58f)</li> <li>Update cron frequency (05db753)</li> <li>Disable build targets but ubuntu (c4c04f5)</li> <li>Report coverage (bb4982e)</li> <li>Checkout code before coverage reporting (ecb3edb)</li> <li>Fine-tune artifact stashing (8e05ab3)</li> <li>Do not run docs deploy on pull requests (637bb6e)</li> <li>Replace PR welcome bot (b4b7291)</li> </ul>"},{"location":"CONTRIBUTING/","title":"Contributing","text":"<p>Contributions are welcome, and they are greatly appreciated! Every little helps, and credit will always be given. You can contribute in many ways.</p>"},{"location":"CONTRIBUTING/#types-of-contributions","title":"Types of Contributions","text":""},{"location":"CONTRIBUTING/#report-bugs","title":"Report Bugs","text":"<p>Report bugs at https://github.com/gabor-boros/minutes/issues.</p> <p>If you are reporting a bug, please use the bug report template, and include:</p> <ul> <li>your operating system name and version</li> <li>any details about your local setup that might be helpful in troubleshooting</li> <li>detailed steps to reproduce the bug</li> </ul>"},{"location":"CONTRIBUTING/#fix-bugs","title":"Fix Bugs","text":"<p>Look through the GitHub issues for bugs. Anything tagged with \"bug\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"CONTRIBUTING/#implement-features","title":"Implement Features","text":"<p>Look through the GitHub issues for features. Anything tagged with \"enhancement\" and \"help wanted\" is open to whoever wants to implement it. In case you added a new source or target, do not forget to add them to the docs as well.</p>"},{"location":"CONTRIBUTING/#write-documentation","title":"Write Documentation","text":"<p>Minutes could always use more documentation, whether as part of the docs, in docstrings, or even on the web in blog posts, articles, and such.</p>"},{"location":"CONTRIBUTING/#submit-feedback","title":"Submit Feedback","text":"<p>The best way to send feedback is to file an issue.</p> <p>If you are proposing a feature:</p> <ul> <li>explain in detail how it would work</li> <li>keep the scope as narrow as possible, to make it easier to implement</li> <li>remember that this is a volunteer-driven project, and that contributions are welcome :)</li> </ul>"},{"location":"CONTRIBUTING/#get-started","title":"Get Started!","text":"<p>Ready to contribute? Here's how to set up <code>minutes</code> for local development.</p> <p>As step 0 make sure you have Go 1.17+ and Python 3 installed.</p> <ol> <li>Fork the repository</li> <li>Clone your fork locally</li> </ol> <pre><code>$ git clone git@github.com:your_name_here/minutes.git\n</code></pre> <ol> <li>Install prerequisites</li> </ol> <pre><code>$ cd minutes\n$ make prerequisites\n$ make deps\n$ python -m virtualenv -p python3 virtualenv\n$ pip install -r www/requirements.txt\n</code></pre> <ol> <li>Create a branch for local development</li> </ol> <pre><code>$ git checkout -b github-username/bugfix-or-feature-name\n</code></pre> <ol> <li>When you're done making changes, check that your changes are formatted, passing linters, and tests are succeeding</li> </ol> <pre><code>$ make format\n$ make lint\n$ make test\n</code></pre> <ol> <li>Update documentation and check the results by running <code>make docs</code></li> <li>Commit your changes and push your branch to GitHub</li> </ol> <p>We use conventional commits, and we require every commit to follow this pattern.</p> <pre><code>$ git add .\n$ git commit -m \"action(scope): summary\"\n$ git push origin github-username/bugfix-or-feature-name\n</code></pre> <ol> <li>Submit a pull request on GitHub</li> </ol>"},{"location":"CONTRIBUTING/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<p>Before you submit a pull request, check that it meets these guidelines:</p> <ol> <li>The pull request should include tests</li> <li>Tests should pass for the PR</li> <li>If the pull request adds new functionality, or changes existing one, the docs should be updated</li> </ol>"},{"location":"CONTRIBUTING/#releasing","title":"Releasing","text":"<p>A reminder for the maintainers on how to release.</p> <p>Before doing anything, ensure you have git-cliff installed, and you already executed <code>make prerequisites</code>.</p> <ol> <li>Make sure every required PR is merged</li> <li>Make sure every test is passing both on GitHub and locally</li> <li>Make sure that formatters are not complaining (<code>make format</code> returns 0)</li> <li>Make sure that linters are not complaining (<code>make lint</code> returns 0)</li> <li>Take a note about the next release version, keeping semantic versioning in mind</li> <li>Update the CHANGELOG.md using <code>TAG=\"&lt;CURRENT RELEASE VERSION&gt;\" make changelog</code></li> <li>Compare the CHANGELOG.md changes and push to master</li> <li>Cut a new tag for the next release version </li> <li>Run <code>GITHUB_TOKEN=\"&lt;TOKEN&gt;\" make release</code> to package the tool and create a GitHub release</li> <li>Provide a changelog for the release using CHANGELOG.md</li> <li>Create a new milestone following the <code>v&lt;NEXT RELEASE VERSION&gt;</code> pattern</li> </ol>"},{"location":"LICENSE/","title":"License","text":"<p>The MIT License (MIT)</p> <p>Copyright \u00a9 2021 Gabor Boros gabor.brs@gmail.com</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"configuration/","title":"Configuration","text":"<p>This page documents the available settings for <code>minutes</code>. Please note that not all configuration options are covered by a CLI flag.</p>"},{"location":"configuration/#configuration-file","title":"Configuration file","text":"<p>Minutes will look for the following places for the configuration file, based on your operating system.</p> <p>The configuration file name in every case is <code>.minutes.toml</code>.</p>"},{"location":"configuration/#linuxunix","title":"Linux/Unix","text":"<p>On Linux/Unix systems, the following locations are checked for the configuration file:</p> <ul> <li><code>$HOME/.minutes.toml</code></li> <li><code>$XDG_CONFIG_HOME/.minutes.toml</code> as specified by https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html</li> </ul>"},{"location":"configuration/#darwin","title":"Darwin","text":"<ul> <li><code>$HOME/.minutes.toml</code></li> <li><code>$HOME/Library/Application Support/.minutes.toml</code></li> </ul>"},{"location":"configuration/#windows","title":"Windows","text":"<ul> <li><code>%USERPROFILE%/.minutes.toml</code></li> <li><code>%AppData%/.minutes.toml</code></li> </ul>"},{"location":"configuration/#on-plan-9","title":"On Plan 9","text":"<ul> <li><code>$home/.minutes.toml</code></li> <li><code>$home/lib/.minutes.toml</code></li> </ul>"},{"location":"configuration/#common-configuration","title":"Common configuration","text":"Config option Kind Description Example Available options date-format string Set the date format in Go specific date format date-format = \"2006-01-02\" dry-run bool Fetch entries from source, print the fetched entries, but do not upload them dry-run = true end string Set the end date for fetching entries (must match the <code>date-format</code>) end = \"2021-10-01\" filter-client string Regex of the client name to filter for filter-client = '^ACME Inc.?(orporation)$' filter-project string Regex of the project name to filter for filter-project = '.(website).' force-billed-duration bool Treat the total spent time as billable time force-billed-duration = true round-to-closest-minute bool Round time to closest minute, even if the closest minute is 0 (zero) round-to-closest-minute = true source string Set the fetch source name source = \"tempo\" Check the list of available sources source-user string Set the fetch source user ID source-user = \"gabor-boros\" start string Set the start date for fetching entries (must match the <code>date-format</code>) start = \"2021-10-01\" table-column-config []table.ColumnConfig Customize columns based on the underlying column config struct<sup>1</sup> table-column-config = { summary = { widthmax = 40 } } table-hide-column []string Hide the specified columns of the printed overview table table-hide-column = [\"start\", \"end\"] <code>summary</code>, <code>project</code>, <code>client</code>, <code>start</code>, <code>end</code> table-sort-by []string Sort the specified rows of the printed table by the given column; each sort option can have a <code>-</code> (hyphen) prefix to indicate descending sort table-sort-by = [\"start\", \"task\"] <code>task</code>, <code>summary</code>, <code>project</code>, <code>client</code>, <code>start</code>, <code>end</code>, <code>billable</code>, <code>unbillable</code> table-truncate-column map[string]int Truncate text in the given column to contain no more than <code>x</code> characters, where <code>x</code> is set by <code>int</code> table-truncate-column = { summary = 30 } target string Set the upload target name target = \"tempo\" Check the list of available targets target-user string Set the upload target user ID target = \"gabor-boros\" tags-as-tasks-regex string Regex of the task pattern tags-as-tasks-regex = '[A-Z]{2,7}-\\d{1,6}'"},{"location":"configuration/#source-and-target-specific-configuration","title":"Source and target specific configuration","text":"<p>Source and target specific configuration is not covered by this guide. For more information, please refer to the source or target documentation.</p>"},{"location":"configuration/#example-configuration","title":"Example configuration","text":"<pre><code># Source config\nsource = \"clockify\"\nsource-user = \"&lt;clockify user ID&gt;\"\n\nclockify-url = \"https://api.clockify.me\"\nclockify-api-key = \"&lt;clockify API token&gt;\"\nclockify-workspace = \"&lt;clockify workspace ID&gt;\"\n\n# Target config\ntarget = \"tempo\"\ntarget-user = \"&lt;jira username&gt;\"\n\ntempo-url = \"https://&lt;org&gt;.atlassian.net\"\ntempo-username = \"&lt;jira username&gt;\"\ntempo-password = \"&lt;jira password&gt;\"\n\n# General config\ntags-as-tasks-regex = '[A-Z]{2,7}-\\d{1,6}'\nround-to-closest-minute = true\nforce-billed-duration = true\n\nfilter-client = '^ACME Inc\\.?(orporation)$'\nfilter-project = '.*(website).*'\n\ntable-sort-by = [\n    \"start\",\n    \"project\",\n    \"task\",\n    \"summary\",\n]\n\ntable-hide-column = [\n    \"end\"\n]\n\n[table-column-truncates]\nsummary = 40\nproject = 10\nclient = 10\n\n# Column Config\n[table-column-config.summary]\nwidthmax = 40\nwidthmin = 20\n</code></pre> <ol> <li> <p>The column configuration cannot be mapped directly as-is. Therefore, the configuration option names are lower-cased. Also, some settings cannot be used that would require Go code, like transformers.\u00a0\u21a9</p> </li> </ol>"},{"location":"getting-started/","title":"Getting started","text":"<p>Minutes is a CLI tool, primarily made for entrepreneurs and finance people, to help their daily work by synchronizing worklogs from a <code>source</code> to a <code>target</code> software. The <code>source</code> can be your own time tracking tool you use, while the <code>target</code> is a bookkeeping software.</p> <p>This guide show you the basics <code>minutes</code>, walks through the available flags, and gives some examples for basic configuration. For the full list of available configuration options, visit the related documentation.</p>"},{"location":"getting-started/#installation","title":"Installation","text":""},{"location":"getting-started/#using-brew","title":"Using <code>brew</code>","text":"<pre><code>$ brew tap gabor-boros/brew\n$ brew install minutes\n</code></pre>"},{"location":"getting-started/#manual-install","title":"Manual install","text":"<p>To install <code>minutes</code>, use one of the release artifacts. If you have <code>go</code> installed, you can build from source as well</p>"},{"location":"getting-started/#configuration","title":"Configuration","text":"<p><code>minutes</code> has numerous flags and there will be more when other sources or targets are added. Therefore, <code>minutes</code> comes with a config file, that can be placed to the user's home directory or the config directory.</p>"},{"location":"getting-started/#usage","title":"Usage","text":"<pre><code>Usage:\n  minutes [flags]\n\nFlags:\n      --clockify-api-key string      set the API key\n      --clockify-url string          set the base URL\n      --clockify-workspace string    set the workspace ID\n      --config string                config file (default is $HOME/.minutes.yaml)\n      --date-format string           set start and end date format (in Go style) (default \"2006-01-02 15:04:05\")\n      --dry-run                      fetch entries, but do not sync them\n      --end string                   set the end date (defaults to now)\n      --force-billed-duration        treat every second spent as billed\n  -h, --help                         help for minutes\n      --round-to-closest-minute      round time to closest minute\n  -s, --source string                set the source of the sync [clockify tempo]\n      --source-user string           set the source user ID\n      --start string                 set the start date (defaults to 00:00:00)\n      --table-hide-column strings    hide table column [summary project client start end]\n      --table-sort-by strings        sort table by column [task summary project client start end billable unbillable] (default [start,project,task,summary])\n  -t, --target string                set the target of the sync [tempo]\n      --target-user string           set the source user ID\n      --tags-as-tasks-regex string   regex of the task pattern\n      --tempo-password string        set the login password\n      --tempo-url string             set the base URL\n      --tempo-username string        set the login user ID\n      --verbose                      print verbose messages\n      --version                      show command version\n</code></pre>"},{"location":"getting-started/#usage-examples","title":"Usage examples","text":"<p>Depending on the config file, the number of flags can change.</p>"},{"location":"getting-started/#simplest-command","title":"Simplest command","text":"<pre><code># No arguments, no flags, just running the command\n$ minutes\n</code></pre>"},{"location":"getting-started/#set-specific-date-and-time","title":"Set specific date and time","text":"<pre><code># Set the date and time to fetch entries in the given time frame\n$ minutes --start \"2021-10-07 00:00:00\" --end \"2021-10-07 23:59:59\"\n</code></pre> <pre><code># Specify the start and end date format\n$ minutes --date-format \"2006-01-02\" --start \"2021-10-07\" --end \"2021-10-08\"\n</code></pre>"},{"location":"getting-started/#use-tags-for-tasks","title":"Use tags for tasks","text":"<pre><code># Specify how a tag should look like to be considered as a task\n$ minutes --tags-as-tasks-regex '[A-Z]{2,7}-\\d{1,6}'\n</code></pre>"},{"location":"getting-started/#minute-based-rounding","title":"Minute based rounding","text":"<pre><code># Set the billed and unbilled time separately\n# to round to the closest minute (even if it is zero)\n$ minutes --round-to-closest-minute\n</code></pre>"},{"location":"getting-started/#format-the-table-output","title":"Format the table output","text":"<pre><code># Skip some columns and sort table by -start date\n$ minutes --table-sort-by \"-start\" --table-hide-column \"client\" --table-hide-column \"project\"\n</code></pre>"},{"location":"getting-started/#config-file-vs-flags","title":"Config file vs flags","text":"<p>Be aware that not all configuration option is covered by flags, especially not more advanced options, like table column width or truncate settings.</p> <p>When using the configuration file and flags in conjunction, please note that flags take precedence, hence it can override settings from the configuration file.</p>"},{"location":"migrations/tempoit/","title":"From \"Tempoit\"","text":"<p>Migrating from Tempoit.</p>"},{"location":"migrations/tempoit/#recommended-config","title":"Recommended config","text":"<pre><code># Source config\nsource = \"timewarrior\"\nsource-user = \"-\"\n\n# Timewarrior config\ntimewarrior-arguments = [\"log\"]\ntimewarrior-client-tag-regex = '^(oc)$'\ntimewarrior-project-tag-regex = '^(log)$'\n\n# Target config\ntarget = \"tempo\"\ntarget-user = \"&lt;jira username&gt;\"\n\n# Tempo config\ntempo-url = \"https://&lt;org&gt;.atlassian.net\"\ntempo-username = \"&lt;jira username&gt;\"\ntempo-password = \"&lt;jira password&gt;\"\n\n# General config\ntags-as-tasks-regex = '[A-Z]{2,7}-\\d{1,6}'\nround-to-closest-minute = true\nforce-billed-duration = true\n</code></pre>"},{"location":"migrations/toggl-tempo-worklog-transfer/","title":"From \"Toggl to Jira\"","text":"<p>Migrating from Toggl to Jira worklog transfer.</p> <p>Warning</p> <p>To get your Toggl user ID, please check the source documentation of Toggl.</p>"},{"location":"migrations/toggl-tempo-worklog-transfer/#recommended-config","title":"Recommended config","text":"<pre><code># Source config\nsource = \"toggl\"\nsource-user = \"&lt;YOUR TOGGL USER ID&gt;\"\n\n# Toggl config\ntoggl-api-key = \"&lt;YOUR API KEY&gt;\"\ntoggl-url = \"https://api.track.toggl.com\"\ntoggl-workspace = \"&lt;YOUR WORKSPACE ID&gt;\"\n\n# Target config\ntarget = \"tempo\"\ntarget-user = \"&lt;jira username&gt;\"\n\n# Tempo config\ntempo-url = \"https://&lt;org&gt;.atlassian.net\"\ntempo-username = \"&lt;jira username&gt;\"\ntempo-password = \"&lt;jira password&gt;\"\n\n# General config\ntags-as-tasks-regex = '[A-Z]{2,7}-\\d{1,6}'\nround-to-closest-minute = true\nforce-billed-duration = true\n</code></pre>"},{"location":"sources/clockify/","title":"Clockify","text":"<p>Source documentation for Clockify.</p>"},{"location":"sources/clockify/#field-mappings","title":"Field mappings","text":"<p>The source makes the following special mappings.</p> From To Description Tags Task Turns tags into tasks and split the entry into as many pieces as the item has matching tags when <code>tags-as-tasks-regex</code> is set Task Summary or Description Tasks will be used for defining the summary of an entry; in case the <code>tags-as-tasks-regex</code> is set, Summary will be set to the Description of the item"},{"location":"sources/clockify/#cli-flags","title":"CLI flags","text":"<p>The source provides to following extra CLI flags.</p> <pre><code>Flags:\n    --clockify-api-key string      set the API key (default \"https://clockify.me\")\n    --clockify-url string          set the base URL\n    --clockify-workspace string    set the workspace ID\n</code></pre>"},{"location":"sources/clockify/#configuration-options","title":"Configuration options","text":"<p>The source provides the following extra configuration options.</p> Config option Kind Description Example clockify-url string URL for the Clockify installation without a trailing slash clockify-url = \"https://clockify.me\" clockify-api-key string API key gathered from Clockify<sup>1</sup> clockify-api-key = \"\" clockify-workspace string Clockify workspace ID<sup>2</sup> clockify-workspace = \"\""},{"location":"sources/clockify/#limitations","title":"Limitations","text":"<p>No known limitations.</p>"},{"location":"sources/clockify/#example-configuration","title":"Example configuration","text":"<pre><code># Source config\nsource = \"clockify\"\nsource-user = \"&lt;YOUR USER ID&gt;\"\n\nclockify-url = \"https://api.clockify.me\"\nclockify-api-key = \"&lt;YOUR API KEY&gt;\"\nclockify-workspace = \"&lt;YOUR WORKSPACE ID&gt;\"\n\n# Target config\ntarget = \"tempo\"\ntarget-user = \"&lt;jira username&gt;\"\n\ntempo-url = \"https://&lt;org&gt;.atlassian.net\"\ntempo-username = \"&lt;jira username&gt;\"\ntempo-password = \"&lt;jira password&gt;\"\n\n# General config\ntags-as-tasks-regex = '[A-Z]{2,7}-\\d{1,6}'\n\nround-to-closest-minute = true\nforce-billed-duration = true\n</code></pre> <ol> <li> <p>As described in the API documentation, visit the settings page to get your API token.\u00a0\u21a9</p> </li> <li> <p>To get your workspace ID, navigate to workspace settings and copy the ID from the URL.\u00a0\u21a9</p> </li> </ol>"},{"location":"sources/harvest/","title":"Harvest","text":"<p>Source documentation for Harvest.</p>"},{"location":"sources/harvest/#field-mappings","title":"Field mappings","text":"<p>The source makes the following special mappings.</p> From To Description Notes Notes, Summary Notes are mapped to both notes and summary as that was the most meaningful option"},{"location":"sources/harvest/#cli-flags","title":"CLI flags","text":"<p>The source provides to following extra CLI flags.</p> <pre><code>Flags:\n    --harvest-account int          set the Account ID\n    --harvest-api-key string       set the API key\n</code></pre>"},{"location":"sources/harvest/#configuration-options","title":"Configuration options","text":"<p>The source provides the following extra configuration options.</p> Config option Kind Description Example harvest-account string The account ID where the API key belongs to harvest-account = 123456789 harvest-api-key string API key gathered from Harvest<sup>1</sup> harvest-api-key = \"\""},{"location":"sources/harvest/#limitations","title":"Limitations","text":"<ul> <li>Harvest does not support tags which makes it impossible to get tasks from tags. A workaround is planned.</li> </ul>"},{"location":"sources/harvest/#example-configuration","title":"Example configuration","text":"<pre><code># Source config\nsource = \"harvest\"\nsource-user = \"&lt;YOUR USER ID&gt;\"\n\nharvest-account = \"&lt;YOUR ACCOUNT ID&gt;\"\nharvest-api-key = \"&lt;YOUR API KEY&gt;\"\n\n# Target config\ntarget = \"tempo\"\ntarget-user = \"&lt;jira username&gt;\"\n\ntempo-url = \"https://&lt;org&gt;.atlassian.net\"\ntempo-username = \"&lt;jira username&gt;\"\ntempo-password = \"&lt;jira password&gt;\"\n\n# General config\nround-to-closest-minute = true\nforce-billed-duration = true\n</code></pre> <ol> <li> <p>Create a new \"Personal Access Token\" on the developer settings panel.\u00a0\u21a9</p> </li> </ol>"},{"location":"sources/tempo/","title":"Tempo","text":"<p>Source documentation for Tempo.</p>"},{"location":"sources/tempo/#field-mappings","title":"Field mappings","text":"<p>The source makes the following special mappings.</p> From To Description AccountKey Client ProjectKey Project Tasks will be used for defining the summary of an entry; in case the <code>tags-as-tasks-regex</code> is set, Summary will be set to the Description of the item IssueKey Task Comment Notes"},{"location":"sources/tempo/#cli-flags","title":"CLI flags","text":"<p>The source provides to following extra CLI flags.</p> <pre><code>Flags:\n    --tempo-password string        set the login password\n    --tempo-url string             set the base URL\n    --tempo-username string        set the login user ID\n</code></pre>"},{"location":"sources/tempo/#configuration-options","title":"Configuration options","text":"<p>The source provides the following extra configuration options.</p> Config option Kind Description Example tempo-password string Jira password tempo-password = \"\" tempo-url string URL for the Jira installation without a trailing slash tempo-url = \"https://example.atlassian.net\" tempo-username string Jira username tempo-username = \"gabor-boros\""},{"location":"sources/tempo/#limitations","title":"Limitations","text":"<p>No known limitations.</p>"},{"location":"sources/tempo/#example-configuration","title":"Example configuration","text":"<p>Warning</p> <p>At the moment only one target is supported, Tempo, hence tempo cannot be used as a source yet.</p> <pre><code># Source config\nsource = \"tempo\"\nsource-user = \"&lt;jira username&gt;\"\n\n# Target config\ntarget = \"&lt;TARGET&gt;\"\ntarget-user = \"&lt;jira username&gt;\"\n\n# Tempo config\ntempo-url = \"https://&lt;org&gt;.atlassian.net\"\ntempo-username = \"&lt;jira username&gt;\"\ntempo-password = \"&lt;jira password&gt;\"\n\n# General config\ntags-as-tasks-regex = '[A-Z]{2,7}-\\d{1,6}'\nround-to-closest-minute = true\nforce-billed-duration = true\n</code></pre>"},{"location":"sources/timewarrior/","title":"Timewarrior","text":"<p>Source documentation for Timewarrior.</p> <p>Timewarrior is one of the most flexible tools. Thanks to its flexibility there is no built-in/dedicated way to mark an entry billable/unbillable, set client, project, or task.</p> <p>Therefore, several assumptions were made to integrate with Timewarrior, though the goal was to keep the maximum flexibility.</p> <p>Warning</p> <p>Timewarrior has no built-in support for marking an entry billable/unbillable. Therefore, every entry will be treated as billable unless it is not forced by <code>force-billed-duration</code> or a matching tag for <code>timewarrior-unbillable-tag</code>.</p> <p>Warning</p> <p>When <code>timewarrior-client-tag-regex</code> or <code>timewarrior-project-tag-regex</code> is matching multiple tags, the last tag will be used.</p> <p>Warning</p> <p>To extract tasks from tags, set the <code>tags-as-tasks-regex</code>.</p>"},{"location":"sources/timewarrior/#field-mappings","title":"Field mappings","text":"<p>The source makes the following special mappings.</p> From To Description Annotation Notes, Summary, Task (optionally) Annotations are used to set Notes and Summary; if no task regex is set, it will be used for Task as well Tags Client, Project, Task Depending on the client, project, and task regex, tags will be used accordingly"},{"location":"sources/timewarrior/#cli-flags","title":"CLI flags","text":"<p>The source provides to following extra CLI flags.</p> <pre><code>Flags:\n    --timewarrior-arguments strings          set additional arguments\n    --timewarrior-client-tag-regex string    regex of client tag pattern\n    --timewarrior-command string             set the executable name (default \"timew\")\n    --timewarrior-project-tag-regex string   regex of project tag pattern\n    --timewarrior-unbillable-tag string      set the unbillable tag (default \"unbillable\")\n</code></pre>"},{"location":"sources/timewarrior/#configuration-options","title":"Configuration options","text":"<p>The source provides the following extra configuration options.</p> Config option Kind Description Example timewarrior-arguments []string Set additional arguments for the export command timewarrior-arguments = \"reviewed\" timewarrior-client-tag-regex string Set the regular expression for extracting Client names from tags timewarrior-client-tag-regex = '^(CLIENT-\\w+)$' timewarrior-command string Set the timewarrior command timewarrior-command = \"timew\" timewarrior-project-tag-regex string Set the regular expression for extracting Project names from tags timewarrior-project-tag-regex = '^PROJ-DEV-\\w+$' timewarrior-unbillable-tag string Set the regular expression to identify which entries are unbillable timewarrior-unbillable-tag = \"unbillable\""},{"location":"sources/timewarrior/#limitations","title":"Limitations","text":"<p>No known limitations.</p>"},{"location":"sources/timewarrior/#example-configuration","title":"Example configuration","text":"<pre><code># Source config\nsource = \"timewarrior\"\nsource-user = \"-\"  # Timewarrior does not support multiple users\n\n# Timewarrior config\ntimewarrior-arguments = [\"log\"]\ntimewarrior-client-tag-regex = '^(oc)$'\ntimewarrior-project-tag-regex = '^(log)$'\n\n# Target config\ntarget = \"tempo\"\ntarget-user = \"&lt;jira username&gt;\"\n\n# Tempo config\ntempo-url = \"https://&lt;org&gt;.atlassian.net\"\ntempo-username = \"&lt;jira username&gt;\"\ntempo-password = \"&lt;jira password&gt;\"\n\n# General config\ntags-as-tasks-regex = '[A-Z]{2,7}-\\d{1,6}'\nround-to-closest-minute = true\nforce-billed-duration = true\n</code></pre>"},{"location":"sources/toggl/","title":"Toggl Track","text":"<p>Source documentation for Toggl Track.</p> <p>Warning</p> <p>To get the available User IDs, please follow this instruction. Only workspace admins can get the User IDs.</p> <p>Info</p> <p>Toggl Track's detailed report API does support filtering, and <code>minutes</code> unexplicitly supports filtering by setting, the source-user to the desired user ID, however it is not officially supported yet.</p>"},{"location":"sources/toggl/#field-mappings","title":"Field mappings","text":"<p>The source makes the following special mappings.</p> From To Description Description Summary Toggl Track has no option to set description for entries"},{"location":"sources/toggl/#cli-flags","title":"CLI flags","text":"<p>The source provides to following extra CLI flags.</p> <pre><code>Flags:\n    --toggl-api-key string      set the API key\n    --toggl-url string          set the base URL (default \"https://api.track.toggl.com\")\n    --toggl-workspace int       set the workspace ID\n</code></pre>"},{"location":"sources/toggl/#configuration-options","title":"Configuration options","text":"<p>The source provides the following extra configuration options.</p> Config option Kind Description Example toggl-api-key string API key gathered from Toggl Track<sup>1</sup> toggl-api-key = \"\" toggl-workspace int Set the workspace ID toggl-workspace = 123456789"},{"location":"sources/toggl/#limitations","title":"Limitations","text":"<ul> <li>No precise start and end date filtering is accepted by Toggl Track report API that is used for this source, therefore only ISO 8601 (<code>YYYY-MM-DD</code>) date format can be used. In Go it is translated to <code>2006-01-02</code> when setting <code>date-format</code> in config or flags.</li> </ul>"},{"location":"sources/toggl/#example-configuration","title":"Example configuration","text":"<pre><code># Source config\nsource = \"toggl\"\n\n# To retrieve your user ID, please follow the instructions listed here:\n# https://github.com/toggl/toggl_api_docs/blob/master/chapters/workspaces.md#get-workspace-users\nsource-user = \"&lt;YOUR TOGGL USER ID&gt;\"\n\n# Toggl config\ntoggl-api-key = \"&lt;YOUR API KEY&gt;\"\ntoggl-url = \"https://api.track.toggl.com\"\ntoggl-workspace = \"&lt;YOUR WORKSPACE ID&gt;\"\n\n# Target config\ntarget = \"tempo\"\ntarget-user = \"&lt;jira username&gt;\"\n\n# Tempo config\ntempo-url = \"https://&lt;org&gt;.atlassian.net\"\ntempo-username = \"&lt;jira username&gt;\"\ntempo-password = \"&lt;jira password&gt;\"\n\n# General config\ntags-as-tasks-regex = '[A-Z]{2,7}-\\d{1,6}'\nround-to-closest-minute = true\nforce-billed-duration = true\n</code></pre> <ol> <li> <p>The API key can be generated as described in their documentation.\u00a0\u21a9</p> </li> </ol>"},{"location":"targets/tempo/","title":"Tempo","text":"<p>Target documentation for Tempo.</p> <p>Warning</p> <p>Tempo can go crazy when not a whole minute is uploaded. It is highly recommended using the <code>round-to-closest-minute</code> option.</p>"},{"location":"targets/tempo/#field-mappings","title":"Field mappings","text":"<p>The target makes the following special mappings.</p> From To Description Summary Comment The entry summary will be used as the comment Task OriginTaskID Since OriginTaskID must be an Issue Key, the Issue Key defined by Task must represent in Jira tempo-user Worker"},{"location":"targets/tempo/#cli-flags","title":"CLI flags","text":"<p>The target does not provide additional CLI flags.</p>"},{"location":"targets/tempo/#configuration-options","title":"Configuration options","text":"<p>The target does not provide additional configuration options.</p>"},{"location":"targets/tempo/#limitations","title":"Limitations","text":"<ul> <li>It is not possible to filter for projects when fetching, though it is a planned feature.</li> <li>Tempo entries cannot have Summary and Notes at the same time, therefore we use Summary for the comment field during upload.</li> <li>At the moment, it is not possible to upload an entry in the name of someone else.</li> </ul>"}]}